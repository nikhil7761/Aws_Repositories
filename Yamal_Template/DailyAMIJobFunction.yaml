AWSTemplateFormatVersion: '2010-09-09'
Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
      Policies:
        - PolicyName: SSMManagedInstancePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:StartAutomationExecution
                Resource: "*"

  DailyAMIJobLambdaFunction1:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs14.x
      Timeout: 300
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');

          exports.handler = async (event) => {
            try {
              const ec2 = new AWS.EC2();
              
              const instanceId = 'i-03acb9c73d2d43771'; // Replace with your first EC2 instance ID
              const params = {
                InstanceId: instanceId,
                Name: `Daily-AMI-${Date.now()}`
              };

              const data = await ec2.createImage(params).promise();
              console.log(data);
              return data.ImageId;
            } catch (err) {
              console.error(err);
              throw err;
            }
          }

  DailyAMIEventRule1:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 day)
      State: ENABLED
      Targets:
        - Arn: !GetAtt DailyAMIJobLambdaFunction1.Arn
          Id: DailyAMIJobLambdaFunction1

  DailyAMILambdaPermission1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt DailyAMIJobLambdaFunction1.Arn
      Principal:
